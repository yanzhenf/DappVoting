{"ast":null,"code":"var _jsxFileName = \"E:\\\\eth_voting\\\\Test\\\\client\\\\src\\\\component\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\n\n// Components\nimport Navbar from \"./Navbar/Navigation\";\nimport NavbarAdmin from \"./Navbar/NavigationAdmin\";\nimport UserHome from \"./UserHome\";\nimport StartEnd from \"./StartEnd\";\nimport ElectionStatus from \"./ElectionStatus\";\n\n// Contract\nimport getWeb3 from \"../getWeb3\";\nimport Election from \"../contracts/Election.json\";\n\n// CSS\nimport \"./Home.css\";\nexport default class Home extends Component {\n  constructor(_props) {\n    super(_props);\n    this.componentDidMount = async () => {\n      if (!window.location.hash) {\n        window.location = window.location + \"#loaded\";\n        window.location.reload();\n      }\n      try {\n        // Get web3 instance\n        const web3 = await getWeb3();\n\n        // Get user accounts\n        const accounts = await web3.eth.getAccounts();\n\n        // Get contract instance\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = Election.networks[networkId];\n        const instance = new web3.eth.Contract(Election.abi, deployedNetwork && deployedNetwork.address);\n\n        // Set web3, accounts, and contract to the state\n        this.setState({\n          web3: web3,\n          ElectionInstance: instance,\n          account: accounts[0]\n        });\n\n        // Check if the user is the admin\n        const admin = await this.state.ElectionInstance.methods.getAdmin().call();\n        if (this.state.account === admin) {\n          this.setState({\n            isAdmin: true\n          });\n        }\n\n        // Get the election start and end status\n        const start = await this.state.ElectionInstance.methods.getStart().call();\n        this.setState({\n          elStarted: start\n        });\n        const end = await this.state.ElectionInstance.methods.getEnd().call();\n        this.setState({\n          elEnded: end\n        });\n\n        // Get election details from the contract\n        const electionDetails = await this.state.ElectionInstance.methods.getElectionDetails().call();\n        this.setState({\n          elDetails: {\n            adminName: electionDetails.adminName,\n            adminEmail: electionDetails.adminEmail,\n            adminTitle: electionDetails.adminTitle,\n            electionTitle: electionDetails.electionTitle,\n            organizationTitle: electionDetails.organizationTitle\n          }\n        });\n      } catch (error) {\n        // Catch any errors that might occur\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n    // End the election\n    this.endElection = async () => {\n      try {\n        await this.state.ElectionInstance.methods.endElection().send({\n          from: this.state.account,\n          gas: 1000000\n        });\n        window.location.reload();\n      } catch (error) {\n        alert(\"Error ending the election.\");\n        console.error(\"Error ending the election:\", error);\n      }\n    };\n    // Register and start the election\n    this.registerElection = async data => {\n      try {\n        await this.state.ElectionInstance.methods.setElectionDetails(data.adminFName.toLowerCase() + \" \" + data.adminLName.toLowerCase(), data.adminEmail.toLowerCase(), data.adminTitle.toLowerCase(), data.electionTitle.toLowerCase(), data.organizationTitle.toLowerCase()).send({\n          from: this.state.account,\n          gas: 1000000\n        });\n        window.location.reload();\n      } catch (error) {\n        alert(\"Error registering the election.\");\n        console.error(\"Error registering the election:\", error);\n      }\n    };\n    // Fetch election history\n    this.fetchElectionHistory = async () => {\n      console.log(\"Fetching election history...\");\n      if (!this.state.ElectionInstance) {\n        console.error(\"Contract is not loaded\");\n        alert(\"Contract instance is not loaded\");\n        return;\n      }\n      try {\n        const electionHistoryCount = await this.state.ElectionInstance.methods.getElectionHistoryCount().call();\n        const electionHistories = [];\n        for (let i = 0; i < electionHistoryCount; i++) {\n          const history = await this.state.ElectionInstance.methods.getElectionHistoryByIndex(i).call();\n          electionHistories.push({\n            id: i,\n            title: history.electionTitle,\n            organization: history.organizationTitle,\n            candidateCount: history.candidateIds.length,\n            startTime: new Date(history.startTime * 1000).toLocaleString(),\n            endTime: new Date(history.endTime * 1000).toLocaleString()\n          });\n        }\n        console.log(\"Election history fetched successfully:\", electionHistories);\n        this.setState({\n          history: electionHistories,\n          showHistory: true\n        });\n      } catch (error) {\n        console.error(\"Error fetching election history:\", error);\n        alert(\"Error fetching election history\");\n      }\n    };\n    this.restartElection = async () => {\n      try {\n        await this.state.ElectionInstance.methods.resetElection().send({\n          from: this.state.account\n        });\n        window.location.reload(); // Refresh the page or reload necessary data\n      } catch (error) {\n        console.error(\"Error restarting election:\", error);\n      }\n    };\n    // Render Admin Home\n    this.renderAdminHome = () => {\n      var _s = $RefreshSig$();\n      const EMsg = props => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"tomato\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 20\n          }\n        }, props.msg);\n      };\n      const AdminHome = () => {\n        _s();\n        // Component containing Admin Home\n        const {\n          handleSubmit,\n          register,\n          formState: {\n            errors\n          }\n        } = useForm();\n        const onSubmit = data => {\n          this.registerElection(data);\n        };\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }\n        }, !this.state.elStarted && !this.state.elEnded ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container-main\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"about-admin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 37\n          }\n        }, \"About Admin\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container-item center-items\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"label-home\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 45\n          }\n        }, \"Full Name\", \" \", errors.adminFName && /*#__PURE__*/React.createElement(EMsg, {\n          msg: \"*Required\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 71\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n          className: \"input-home\",\n          type: \"text\",\n          placeholder: \"First Name\"\n        }, register(\"adminFName\", {\n          required: true\n        }), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 49\n          }\n        })), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n          className: \"input-home\",\n          type: \"text\",\n          placeholder: \"Last Name\"\n        }, register(\"adminLName\"), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 49\n          }\n        }))), /*#__PURE__*/React.createElement(\"label\", {\n          className: \"label-home\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 45\n          }\n        }, \"Email\", \" \", errors.adminEmail && /*#__PURE__*/React.createElement(EMsg, {\n          msg: errors.adminEmail.message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 53\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n          className: \"input-home\",\n          placeholder: \"e.g. you@example.com\",\n          name: \"adminEmail\"\n        }, register(\"adminEmail\", {\n          required: \"*Required\",\n          pattern: {\n            value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n            // Email validation\n            message: \"*Invalid\"\n          }\n        }), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 49\n          }\n        }))), /*#__PURE__*/React.createElement(\"label\", {\n          className: \"label-home\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 45\n          }\n        }, \"Position or Title\", \" \", errors.adminTitle && /*#__PURE__*/React.createElement(EMsg, {\n          msg: \"*Required\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 71\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n          className: \"input-home\",\n          type: \"text\",\n          placeholder: \"e.g. HR Manager\"\n        }, register(\"adminTitle\", {\n          required: true\n        }), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 49\n          }\n        })))))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"about-election\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 37\n          }\n        }, \"About Election\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container-item center-items\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"label-home\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 45\n          }\n        }, \"Election Title\", \" \", errors.electionTitle && /*#__PURE__*/React.createElement(EMsg, {\n          msg: \"*Required\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 74\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n          className: \"input-home\",\n          type: \"text\",\n          placeholder: \"e.g. School Election\"\n        }, register(\"electionTitle\", {\n          required: true\n        }), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 49\n          }\n        }))), /*#__PURE__*/React.createElement(\"label\", {\n          className: \"label-home\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 45\n          }\n        }, \"Organization Name\", \" \", errors.organizationName && /*#__PURE__*/React.createElement(EMsg, {\n          msg: \"*Required\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 77\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n          className: \"input-home\",\n          type: \"text\",\n          placeholder: \"e.g. Lifeline Academy\"\n        }, register(\"organizationTitle\", {\n          required: true\n        }), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 49\n          }\n        }))))))) : this.state.elStarted ? /*#__PURE__*/React.createElement(UserHome, {\n          el: this.state.elDetails,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 29\n          }\n        }) : null, /*#__PURE__*/React.createElement(StartEnd, {\n          account: this.state.account,\n          contract: this.state.ElectionInstance,\n          elStarted: this.state.elStarted,\n          elEnded: this.state.elEnded,\n          startElFn: this.startElection,\n          endElFn: this.endElection,\n          refresh: this.refresh,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(ElectionStatus, {\n          elStarted: this.state.elStarted,\n          elEnded: this.state.elEnded,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }\n        })));\n      };\n      _s(AdminHome, \"SAE9PQQ5VqeNjfo09Jf6D5HwJp8=\", false, function () {\n        return [useForm];\n      });\n      return /*#__PURE__*/React.createElement(AdminHome, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 16\n        }\n      });\n    };\n    this.state = {\n      ElectionInstance: undefined,\n      account: null,\n      web3: null,\n      isAdmin: false,\n      elStarted: false,\n      elEnded: false,\n      elDetails: {}\n    };\n  }\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }, \"Loading Web3, accounts, and contract...\"));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.isAdmin ? /*#__PURE__*/React.createElement(NavbarAdmin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 39\n      }\n    }) : /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-item center-items info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Metamask Account: \", this.state.account), !this.state.elStarted && !this.state.elEnded ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-item info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    }, \"Election is not initialized.\"), this.state.isAdmin ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    }, \"Set up the election.\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 37\n      }\n    }, \"Please wait...\"))) : null), this.state.isAdmin ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(this.renderAdminHome, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    })) : this.state.elStarted ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserHome, {\n      el: this.state.elDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    })) : !this.state.elStarted && this.state.elEnded ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-item attention\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }, \"Election has ended.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/Results\",\n      style: {\n        color: \"black\",\n        textDecoration: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }, \"View Results\")))) : null);\n  }\n}","map":{"version":3,"names":["React","Component","useForm","Link","Navbar","NavbarAdmin","UserHome","StartEnd","ElectionStatus","getWeb3","Election","Home","constructor","props","componentDidMount","window","location","hash","reload","web3","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","ElectionInstance","account","admin","state","methods","getAdmin","call","isAdmin","start","getStart","elStarted","end","getEnd","elEnded","electionDetails","getElectionDetails","elDetails","adminName","adminEmail","adminTitle","electionTitle","organizationTitle","error","alert","console","endElection","send","from","gas","registerElection","data","setElectionDetails","adminFName","toLowerCase","adminLName","fetchElectionHistory","log","electionHistoryCount","getElectionHistoryCount","electionHistories","i","history","getElectionHistoryByIndex","push","id","title","organization","candidateCount","candidateIds","length","startTime","Date","toLocaleString","endTime","showHistory","restartElection","resetElection","renderAdminHome","_s","$RefreshSig$","EMsg","createElement","style","color","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","msg","AdminHome","handleSubmit","register","formState","errors","onSubmit","className","Object","assign","type","placeholder","required","message","name","pattern","value","organizationName","el","contract","startElFn","startElection","endElFn","refresh","undefined","render","Fragment","to","textDecoration"],"sources":["E:/eth_voting/Test/client/src/component/Home.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\n\n// Components\nimport Navbar from \"./Navbar/Navigation\";\nimport NavbarAdmin from \"./Navbar/NavigationAdmin\";\nimport UserHome from \"./UserHome\";\nimport StartEnd from \"./StartEnd\";\nimport ElectionStatus from \"./ElectionStatus\";\n\n// Contract\nimport getWeb3 from \"../getWeb3\";\nimport Election from \"../contracts/Election.json\";\n\n// CSS\nimport \"./Home.css\";\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ElectionInstance: undefined,\n            account: null,\n            web3: null,\n            isAdmin: false,\n            elStarted: false,\n            elEnded: false,\n            elDetails: {},\n        };\n    }\n\n    componentDidMount = async () => {\n        if (!window.location.hash) {\n            window.location = window.location + \"#loaded\";\n            window.location.reload();\n        }\n        try {\n            // Get web3 instance\n            const web3 = await getWeb3();\n\n            // Get user accounts\n            const accounts = await web3.eth.getAccounts();\n\n            // Get contract instance\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = Election.networks[networkId];\n            const instance = new web3.eth.Contract(\n                Election.abi,\n                deployedNetwork && deployedNetwork.address\n            );\n\n            // Set web3, accounts, and contract to the state\n            this.setState({\n                web3: web3,\n                ElectionInstance: instance,\n                account: accounts[0],\n            });\n\n            // Check if the user is the admin\n            const admin = await this.state.ElectionInstance.methods.getAdmin().call();\n            if (this.state.account === admin) {\n                this.setState({ isAdmin: true });\n            }\n\n            // Get the election start and end status\n            const start = await this.state.ElectionInstance.methods.getStart().call();\n            this.setState({ elStarted: start });\n            const end = await this.state.ElectionInstance.methods.getEnd().call();\n            this.setState({ elEnded: end });\n\n            // Get election details from the contract\n            const electionDetails = await this.state.ElectionInstance.methods\n                .getElectionDetails()\n                .call();\n\n            this.setState({\n                elDetails: {\n                    adminName: electionDetails.adminName,\n                    adminEmail: electionDetails.adminEmail,\n                    adminTitle: electionDetails.adminTitle,\n                    electionTitle: electionDetails.electionTitle,\n                    organizationTitle: electionDetails.organizationTitle,\n                },\n            });\n        } catch (error) {\n            // Catch any errors that might occur\n            alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n            console.error(error);\n        }\n    };\n\n    // End the election\n    endElection = async () => {\n        try {\n            await this.state.ElectionInstance.methods\n                .endElection()\n                .send({ from: this.state.account, gas: 1000000 });\n            window.location.reload();\n        } catch (error) {\n            alert(\"Error ending the election.\");\n            console.error(\"Error ending the election:\", error);\n        }\n    };\n\n    // Register and start the election\n    registerElection = async (data) => {\n        try {\n            await this.state.ElectionInstance.methods\n                .setElectionDetails(\n                    data.adminFName.toLowerCase() + \" \" + data.adminLName.toLowerCase(),\n                    data.adminEmail.toLowerCase(),\n                    data.adminTitle.toLowerCase(),\n                    data.electionTitle.toLowerCase(),\n                    data.organizationTitle.toLowerCase()\n                )\n                .send({ from: this.state.account, gas: 1000000 });\n            window.location.reload();\n        } catch (error) {\n            alert(\"Error registering the election.\");\n            console.error(\"Error registering the election:\", error);\n        }\n    };\n\n    // Fetch election history\n    fetchElectionHistory = async () => {\n        console.log(\"Fetching election history...\");\n        if (!this.state.ElectionInstance) {\n            console.error(\"Contract is not loaded\");\n            alert(\"Contract instance is not loaded\");\n            return;\n        }\n        try {\n            const electionHistoryCount = await this.state.ElectionInstance.methods.getElectionHistoryCount().call();\n            const electionHistories = [];\n\n            for (let i = 0; i < electionHistoryCount; i++) {\n                const history = await this.state.ElectionInstance.methods.getElectionHistoryByIndex(i).call();\n                electionHistories.push({\n                    id: i,\n                    title: history.electionTitle,\n                    organization: history.organizationTitle,\n                    candidateCount: history.candidateIds.length,\n                    startTime: new Date(history.startTime * 1000).toLocaleString(),\n                    endTime: new Date(history.endTime * 1000).toLocaleString(),\n                });\n            }\n\n            console.log(\"Election history fetched successfully:\", electionHistories);\n            this.setState({ history: electionHistories, showHistory: true });\n        } catch (error) {\n            console.error(\"Error fetching election history:\", error);\n            alert(\"Error fetching election history\");\n        }\n    };\n\n    render() {\n        if (!this.state.web3) {\n            return (\n                <>\n                    <Navbar />\n                    <center>Loading Web3, accounts, and contract...</center>\n                </>\n            );\n        }\n        return (\n            <>\n                {this.state.isAdmin ? <NavbarAdmin /> : <Navbar />}\n                <div className=\"container-main\">\n                    <div className=\"container-item center-items info\">\n                        Metamask Account: {this.state.account}\n                    </div>\n                    {!this.state.elStarted && !this.state.elEnded ? (\n                        <div className=\"container-item info\">\n                            <center>\n                                <h3>Election is not initialized.</h3>\n                                {this.state.isAdmin ? (\n                                    <p>Set up the election.</p>\n                                ) : (\n                                    <p>Please wait...</p>\n                                )}\n                            </center>\n                        </div>\n                    ) : null}\n                </div>\n                {this.state.isAdmin ? (\n                    <>\n                        <this.renderAdminHome />\n                    </>\n                ) : this.state.elStarted ? (\n                    <>\n                        <UserHome el={this.state.elDetails} />\n                    </>\n                ) : !this.state.elStarted && this.state.elEnded ? (\n                    <>\n                        <div className=\"container-item attention\">\n                            <center>\n                                <h3>Election has ended.</h3>\n                                <br />\n                                <Link\n                                    to=\"/Results\"\n                                    style={{ color: \"black\", textDecoration: \"underline\" }}\n                                >\n                                    View Results\n                                </Link>\n                            </center>\n                        </div>\n                    </>\n                ) : null}\n            </>\n        );\n    }\n\n    restartElection = async () => {\n        try {\n            await this.state.ElectionInstance.methods.resetElection().send({ from: this.state.account });\n            window.location.reload(); // Refresh the page or reload necessary data\n        } catch (error) {\n            console.error(\"Error restarting election:\", error);\n        }\n    };\n\n    // Render Admin Home\n    renderAdminHome = () => {\n        const EMsg = (props) => {\n            return <span style={{ color: \"tomato\" }}>{props.msg}</span>;\n        };\n\n        const AdminHome = () => {\n            // Component containing Admin Home\n            const {\n                handleSubmit,\n                register,\n                formState: { errors },\n            } = useForm();\n\n            const onSubmit = (data) => {\n                this.registerElection(data);\n            };\n\n            return (\n                <div>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        {!this.state.elStarted && !this.state.elEnded ? (\n                            <div className=\"container-main\">\n                                {/* About Admin */}\n                                <div className=\"about-admin\">\n                                    <h3>About Admin</h3>\n                                    <div className=\"container-item center-items\">\n                                        <div>\n                                            <label className=\"label-home\">\n                                                Full Name{\" \"}\n                                                {errors.adminFName && <EMsg msg=\"*Required\" />}\n                                                <input\n                                                    className=\"input-home\"\n                                                    type=\"text\"\n                                                    placeholder=\"First Name\"\n                                                    {...register(\"adminFName\", {\n                                                        required: true,\n                                                    })}\n                                                />\n                                                <input\n                                                    className=\"input-home\"\n                                                    type=\"text\"\n                                                    placeholder=\"Last Name\"\n                                                    {...register(\"adminLName\")}\n                                                />\n                                            </label>\n\n                                            <label className=\"label-home\">\n                                                Email{\" \"}\n                                                {errors.adminEmail && (\n                                                    <EMsg msg={errors.adminEmail.message} />\n                                                )}\n                                                <input\n                                                    className=\"input-home\"\n                                                    placeholder=\"e.g. you@example.com\"\n                                                    name=\"adminEmail\"\n                                                    {...register(\"adminEmail\", {\n                                                        required: \"*Required\",\n                                                        pattern: {\n                                                            value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/, // Email validation\n                                                            message: \"*Invalid\",\n                                                        },\n                                                    })}\n                                                />\n                                            </label>\n\n                                            <label className=\"label-home\">\n                                                Position or Title{\" \"}\n                                                {errors.adminTitle && <EMsg msg=\"*Required\" />}\n                                                <input\n                                                    className=\"input-home\"\n                                                    type=\"text\"\n                                                    placeholder=\"e.g. HR Manager\"\n                                                    {...register(\"adminTitle\", {\n                                                        required: true,\n                                                    })}\n                                                />\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* About Election */}\n                                <div className=\"about-election\">\n                                    <h3>About Election</h3>\n                                    <div className=\"container-item center-items\">\n                                        <div>\n                                            <label className=\"label-home\">\n                                                Election Title{\" \"}\n                                                {errors.electionTitle && <EMsg msg=\"*Required\" />}\n                                                <input\n                                                    className=\"input-home\"\n                                                    type=\"text\"\n                                                    placeholder=\"e.g. School Election\"\n                                                    {...register(\"electionTitle\", {\n                                                        required: true,\n                                                    })}\n                                                />\n                                            </label>\n                                            <label className=\"label-home\">\n                                                Organization Name{\" \"}\n                                                {errors.organizationName && <EMsg msg=\"*Required\" />}\n                                                <input\n                                                    className=\"input-home\"\n                                                    type=\"text\"\n                                                    placeholder=\"e.g. Lifeline Academy\"\n                                                    {...register(\"organizationTitle\", {\n                                                        required: true,\n                                                    })}\n                                                />\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : this.state.elStarted ? (\n                            <UserHome el={this.state.elDetails} />\n                        ) : null}\n                        <StartEnd\n                            account={this.state.account}\n                            contract={this.state.ElectionInstance}\n                            elStarted={this.state.elStarted}\n                            elEnded={this.state.elEnded}\n                            startElFn={this.startElection}\n                            endElFn={this.endElection}\n                            refresh={this.refresh}\n                        />\n                        <ElectionStatus\n                            elStarted={this.state.elStarted}\n                            elEnded={this.state.elEnded}\n                        />\n                    </form>\n                </div>\n            );\n        };\n        return <AdminHome />;\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}